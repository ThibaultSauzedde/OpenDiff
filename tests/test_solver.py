import pytest
import numpy as np
import numpy.testing as npt
import scipy

import opendiff.solver as solver
from opendiff import set_log_level, log_level


def test_solverPI_1d(macrolib_1d):
    set_log_level(log_level.debug)
    macrolib, x_mesh = macrolib_1d
    ref_eigenvector = np.array([0.02422983, 0.00530779, 0.07209338, 0.01579275, 0.11818324,
                                0.02588911, 0.16136532, 0.03534839, 0.20057686, 0.04393778,
                                0.23485256, 0.05144582, 0.26334835, 0.05768763, 0.28536217,
                                0.06250944, 0.30035136, 0.06579242, 0.30794603, 0.06745558,
                                0.30795833, 0.06745782, 0.30038708, 0.06579893, 0.2854179,
                                0.06251959, 0.26341873, 0.05770044, 0.23493079, 0.05146005,
                                0.20065531, 0.04395203, 0.16143628, 0.03536127, 0.11823968,
                                0.02589934, 0.07212968, 0.01579933, 0.02424235, 0.00531005])
    ref_eigenvalue = 0.5513156
    s = solver.SolverPowerIt(x_mesh, macrolib, -1., -1.)

    s.solve(inner_solver="SparseLU")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    # s.solve(inner_solver="LeastSquaresConjugateGradient")
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    #                         decimal=4)

    s.solve(inner_solver="BiCGSTAB")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(inner_solver="BiCGSTAB", inner_precond="IncompleteLUT")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(inner_solver="GMRES")
    assert 0.5513126727936326 == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)


def test_solverSlepc_1d(macrolib_1d):
    solver.init_slepc()
    set_log_level(log_level.debug)
    macrolib, x_mesh = macrolib_1d
    ref_eigenvector = np.array([0.02422983, 0.00530779, 0.07209338, 0.01579275, 0.11818324,
                                0.02588911, 0.16136532, 0.03534839, 0.20057686, 0.04393778,
                                0.23485256, 0.05144582, 0.26334835, 0.05768763, 0.28536217,
                                0.06250944, 0.30035136, 0.06579242, 0.30794603, 0.06745558,
                                0.30795833, 0.06745782, 0.30038708, 0.06579893, 0.2854179,
                                0.06251959, 0.26341873, 0.05770044, 0.23493079, 0.05146005,
                                0.20065531, 0.04395203, 0.16143628, 0.03536127, 0.11823968,
                                0.02589934, 0.07212968, 0.01579933, 0.02424235, 0.00531005])
    ref_eigenvalue = 0.5513156
    s = solver.SolverSlepc(x_mesh, macrolib, -1., -1.)
    s.solve()
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    # s.solve(solver="power") not working
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    #                         decimal=4)

    s.solve(solver="arnoldi")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    # s.solve(solver="arpack") arpack is missing
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    #                         decimal=4)

    s.solve(inner_solver="ibcgs")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)


def test_solverPI_2d(macrolib_2d):
    set_log_level(log_level.debug)
    macrolib, x_mesh, y_mesh = macrolib_2d
    ref_eigenvector = np.array([0.02422983, 0.00530779, 0.07209338, 0.01579275, 0.11818324,
                                0.02588911, 0.16136532, 0.03534839, 0.20057686, 0.04393778,
                                0.23485256, 0.05144582, 0.26334835, 0.05768763, 0.28536217,
                                0.06250944, 0.30035136, 0.06579242, 0.30794603, 0.06745558,
                                0.30795833, 0.06745782, 0.30038708, 0.06579893, 0.2854179,
                                0.06251959, 0.26341873, 0.05770044, 0.23493079, 0.05146005,
                                0.20065531, 0.04395203, 0.16143628, 0.03536127, 0.11823968,
                                0.02589934, 0.07212968, 0.01579933, 0.02424235, 0.00531005])
    ref_eigenvalue = 1.0256107535029826
    ref_eigenvector = np.array([5.49753726e-02, 8.75880817e-03, 1.20925164e-01, 2.83276136e-02, 1.41950548e-01, 3.33027071e-02, 1.33029023e-01, 3.11522596e-02, 7.76608939e-02, 1.24152986e-02, 1.39780270e-01, 3.27394902e-02, 1.49040300e-01, 3.49919208e-02, 1.15718202e-01, 2.90177699e-02, 9.10027179e-03, 3.13795851e-02, 1.20925164e-01, 2.83276136e-02, 1.37532636e-01, 3.22651992e-02, 1.37306862e-01, 3.21473862e-02, 1.49606314e-01, 3.51003837e-02, 1.45687365e-01, 3.41250915e-02, 1.62211807e-01, 3.80625114e-02, 1.56338009e-01, 3.67257707e-02, 1.11966213e-01, 2.80767612e-02, 8.71619236e-03, 2.98846118e-02, 1.41950548e-01, 3.33027071e-02, 1.37306862e-01, 3.21473862e-02, 8.92362199e-02, 1.43118315e-02, 1.46825240e-01, 3.43831225e-02, 1.61133411e-01, 3.78076440e-02, 1.69251670e-01, 3.97370232e-02, 1.64350403e-01, 4.07022206e-02, 9.25407689e-02, 2.37537895e-02, 6.99401867e-03, 2.38228755e-02, 1.33029023e-01, 3.11522596e-02, 1.49606314e-01, 3.51003837e-02, 1.46825240e-01, 3.43831225e-02, 1.55025963e-01, 3.63732499e-02, 1.45026659e-01, 3.39668682e-02, 1.48955870e-01, 3.49892949e-02, 1.25914160e-01, 3.17618854e-02, 1.67882575e-02, 5.66038161e-02, 1.88624572e-03, 1.01098571e-02, 7.76608939e-02, 1.24152986e-02, 1.45687365e-01, 3.41250915e-02, 1.61133411e-01, 3.78076440e-02, 1.45026659e-01, 3.39668682e-02,
                       8.30877753e-02, 1.33478909e-02, 1.19222009e-01, 2.94640723e-02, 8.17230785e-02, 2.09686837e-02, 7.52911710e-03, 2.83752547e-02, 7.38918230e-04, 4.32091706e-03, 1.39780270e-01, 3.27394902e-02, 1.62211807e-01, 3.80625114e-02, 1.69251670e-01, 3.97370232e-02, 1.48955870e-01, 3.49892949e-02, 1.19222009e-01, 2.94640723e-02, 8.24046160e-02, 2.12360275e-02, 1.23344380e-02, 4.12640716e-02, 1.69828834e-03, 9.44950016e-03, 1.90574174e-04, 1.32272876e-03, 1.49040300e-01, 3.49919208e-02, 1.56338009e-01, 3.67257707e-02, 1.64350403e-01, 4.07022206e-02, 1.25914160e-01, 3.17618854e-02, 8.17230785e-02, 2.09686837e-02, 1.23344380e-02, 4.12640716e-02, 2.10996147e-03, 1.15134939e-02, 3.25330844e-04, 2.25390280e-03, 4.02576870e-05, 3.15654157e-04, 1.15718202e-01, 2.90177699e-02, 1.11966213e-01, 2.80767612e-02, 9.25407689e-02, 2.37537895e-02, 1.67882575e-02, 5.66038161e-02, 7.52911710e-03, 2.83752547e-02, 1.69828834e-03, 9.44950016e-03, 3.25330844e-04, 2.25390280e-03, 5.54626262e-05, 4.38022019e-04, 7.44491325e-06, 6.32846652e-05, 9.10027179e-03, 3.13795851e-02, 8.71619236e-03, 2.98846118e-02, 6.99401867e-03, 2.38228755e-02, 1.88624572e-03, 1.01098571e-02, 7.38918230e-04, 4.32091706e-03, 1.90574174e-04, 1.32272876e-03, 4.02576870e-05, 3.15654157e-04, 7.44491325e-06, 6.32846652e-05, 1.06355904e-06, 9.48064546e-06])
    s = solver.SolverPowerIt(x_mesh, y_mesh, macrolib, 1., -1., 1., -1.)

    s.solve(inner_solver="SparseLU")
    # print(s.getEigenValues())
    # print(s.getEigenVectors()[0])
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-5)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(inner_solver="LeastSquaresConjugateGradient")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-5)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(inner_solver="BiCGSTAB")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-5)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(inner_solver="BiCGSTAB", inner_precond="IncompleteLUT")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-5)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(inner_solver="GMRES")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-4)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=3)


def test_solverSlepc_2d(macrolib_2d):
    solver.init_slepc()
    set_log_level(log_level.debug)
    macrolib, x_mesh, y_mesh = macrolib_2d
    ref_eigenvector_pi = np.array([5.49753726e-02, 8.75880817e-03, 1.20925164e-01, 2.83276136e-02, 1.41950548e-01, 3.33027071e-02, 1.33029023e-01, 3.11522596e-02, 7.76608939e-02, 1.24152986e-02, 1.39780270e-01, 3.27394902e-02, 1.49040300e-01, 3.49919208e-02, 1.15718202e-01, 2.90177699e-02, 9.10027179e-03, 3.13795851e-02, 1.20925164e-01, 2.83276136e-02, 1.37532636e-01, 3.22651992e-02, 1.37306862e-01, 3.21473862e-02, 1.49606314e-01, 3.51003837e-02, 1.45687365e-01, 3.41250915e-02, 1.62211807e-01, 3.80625114e-02, 1.56338009e-01, 3.67257707e-02, 1.11966213e-01, 2.80767612e-02, 8.71619236e-03, 2.98846118e-02, 1.41950548e-01, 3.33027071e-02, 1.37306862e-01, 3.21473862e-02, 8.92362199e-02, 1.43118315e-02, 1.46825240e-01, 3.43831225e-02, 1.61133411e-01, 3.78076440e-02, 1.69251670e-01, 3.97370232e-02, 1.64350403e-01, 4.07022206e-02, 9.25407689e-02, 2.37537895e-02, 6.99401867e-03, 2.38228755e-02, 1.33029023e-01, 3.11522596e-02, 1.49606314e-01, 3.51003837e-02, 1.46825240e-01, 3.43831225e-02, 1.55025963e-01, 3.63732499e-02, 1.45026659e-01, 3.39668682e-02, 1.48955870e-01, 3.49892949e-02, 1.25914160e-01, 3.17618854e-02, 1.67882575e-02, 5.66038161e-02, 1.88624572e-03, 1.01098571e-02, 7.76608939e-02, 1.24152986e-02, 1.45687365e-01, 3.41250915e-02, 1.61133411e-01, 3.78076440e-02, 1.45026659e-01, 3.39668682e-02,
                       8.30877753e-02, 1.33478909e-02, 1.19222009e-01, 2.94640723e-02, 8.17230785e-02, 2.09686837e-02, 7.52911710e-03, 2.83752547e-02, 7.38918230e-04, 4.32091706e-03, 1.39780270e-01, 3.27394902e-02, 1.62211807e-01, 3.80625114e-02, 1.69251670e-01, 3.97370232e-02, 1.48955870e-01, 3.49892949e-02, 1.19222009e-01, 2.94640723e-02, 8.24046160e-02, 2.12360275e-02, 1.23344380e-02, 4.12640716e-02, 1.69828834e-03, 9.44950016e-03, 1.90574174e-04, 1.32272876e-03, 1.49040300e-01, 3.49919208e-02, 1.56338009e-01, 3.67257707e-02, 1.64350403e-01, 4.07022206e-02, 1.25914160e-01, 3.17618854e-02, 8.17230785e-02, 2.09686837e-02, 1.23344380e-02, 4.12640716e-02, 2.10996147e-03, 1.15134939e-02, 3.25330844e-04, 2.25390280e-03, 4.02576870e-05, 3.15654157e-04, 1.15718202e-01, 2.90177699e-02, 1.11966213e-01, 2.80767612e-02, 9.25407689e-02, 2.37537895e-02, 1.67882575e-02, 5.66038161e-02, 7.52911710e-03, 2.83752547e-02, 1.69828834e-03, 9.44950016e-03, 3.25330844e-04, 2.25390280e-03, 5.54626262e-05, 4.38022019e-04, 7.44491325e-06, 6.32846652e-05, 9.10027179e-03, 3.13795851e-02, 8.71619236e-03, 2.98846118e-02, 6.99401867e-03, 2.38228755e-02, 1.88624572e-03, 1.01098571e-02, 7.38918230e-04, 4.32091706e-03, 1.90574174e-04, 1.32272876e-03, 4.02576870e-05, 3.15654157e-04, 7.44491325e-06, 6.32846652e-05, 1.06355904e-06, 9.48064546e-06])
        
    ref_eigenvector = np.array([5.30287092e-02, 8.44945688e-03, 1.16852669e-01, 2.73770483e-02, 1.38064361e-01, 3.23939902e-02, 1.30691747e-01, 3.06055817e-02, 7.74633912e-02, 1.23837026e-02, 1.41118646e-01, 3.30524152e-02, 1.51150585e-01, 3.54858200e-02, 1.17625813e-01, 2.94946710e-02, 9.24942559e-03, 3.18920980e-02, 1.16852669e-01, 2.73770483e-02, 1.33333060e-01, 3.12833444e-02, 1.34112225e-01, 3.14011794e-02, 1.47804496e-01, 3.46785767e-02, 1.45610423e-01, 3.41067478e-02, 1.63528636e-01, 3.83701674e-02, 1.58335295e-01, 3.71934107e-02, 1.13683033e-01, 2.85059356e-02, 8.84962787e-03, 3.03416325e-02, 1.38064361e-01, 3.23939902e-02, 1.34112225e-01, 3.14011794e-02, 8.79417864e-02, 1.41046131e-02, 1.45997678e-01, 3.41900061e-02, 1.61358240e-01, 3.78597543e-02, 1.70459994e-01, 4.00197181e-02, 1.66146993e-01, 4.11457693e-02, 9.37839303e-02, 2.40704137e-02, 7.08890070e-03, 2.41471203e-02, 1.30691747e-01, 3.06055817e-02, 1.47804496e-01, 3.46785767e-02, 1.45997678e-01, 3.41900061e-02, 1.54774891e-01, 3.63140625e-02, 1.45327384e-01, 3.40369067e-02, 1.49766437e-01, 3.51795053e-02, 1.26939885e-01, 3.20212543e-02, 1.69600174e-02, 5.71779834e-02, 1.90716083e-03, 1.02214444e-02, 7.74633912e-02, 1.23837026e-02, 1.45610423e-01, 3.41067478e-02, 1.61358240e-01, 3.78597543e-02, 1.45327384e-01, 3.40369067e-02,
                               8.33102061e-02, 1.33837082e-02, 1.19645166e-01, 2.95694653e-02, 8.21485306e-02, 2.10782186e-02, 7.57547748e-03, 2.85611827e-02, 7.44172862e-04, 4.35282956e-03, 1.41118646e-01, 3.30524152e-02, 1.63528636e-01, 3.83701674e-02, 1.70459994e-01, 4.00197181e-02, 1.49766437e-01, 3.51795053e-02, 1.19645166e-01, 2.95694653e-02, 8.26082476e-02, 2.12904551e-02, 1.23818468e-02, 4.14233219e-02, 1.70630370e-03, 9.49505280e-03, 1.91609413e-04, 1.33004652e-03, 1.51150585e-01, 3.54858200e-02, 1.58335295e-01, 3.71934107e-02, 1.66146993e-01, 4.11457693e-02, 1.26939885e-01, 3.20212543e-02, 8.21485306e-02, 2.10782186e-02, 1.23818468e-02, 4.14233219e-02, 2.11809300e-03, 1.15579982e-02, 3.26711717e-04, 2.26354012e-03, 4.04460726e-05, 3.17142251e-04, 1.17625813e-01, 2.94946710e-02, 1.13683033e-01, 2.85059356e-02, 9.37839303e-02, 2.40704137e-02, 1.69600174e-02, 5.71779834e-02, 7.57547748e-03, 2.85611827e-02, 1.70630370e-03, 9.49505280e-03, 3.26711717e-04, 2.26354012e-03, 5.56982586e-05, 4.39891321e-04, 7.47789189e-06, 6.35660133e-05, 9.24942559e-03, 3.18920980e-02, 8.84962787e-03, 3.03416325e-02, 7.08890070e-03, 2.41471203e-02, 1.90716083e-03, 1.02214444e-02, 7.44172862e-04, 4.35282956e-03, 1.91609413e-04, 1.33004652e-03, 4.04460726e-05, 3.17142251e-04, 7.47789189e-06, 6.35660133e-05, 1.06827098e-06, 9.52274736e-06])
    # delta_pi = (100*(ref_eigenvector-ref_eigenvector_pi)/ref_eigenvector_pi).reshape((len(y_mesh)-1, len(x_mesh)-1, macrolib.getNbGroups()))
    # print(delta_pi[:, :, 0])
    # print(delta_pi[:, :, 1])

    ref_eigenvalue = 1.0256209309983306 # 1 pcm de diff avec pi
    s = solver.SolverSlepc(x_mesh, y_mesh, macrolib, 1., -1., 1., -1.)
    s.solve()
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    #not convertged enough to get he same results 
    # # s.solve(solver="power") not working
    # # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    # #                         decimal=4)

    # s.solve(solver="arnoldi")
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    #                         decimal=4)

    # # s.solve(solver="arpack") arpack is missing
    # # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    # #                         decimal=4)

    # s.solve(inner_solver="ibcgs")
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    #                         decimal=4)


def test_solverPI_3d(macrolib_3d):
    set_log_level(log_level.debug)
    macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d
    ref_eigenvalue = 1.115106780351837
    ref_eigenvector = np.array([1.66812049e-06, 5.33549865e-06, 1.22019512e-05, 9.56478188e-06, 8.71091930e-07, 3.63816244e-06, 1.87431321e-05, 1.60819726e-05,                                5.05081261e-06, 2.08511951e-05, 3.01204638e-05, 6.47710715e-05, 6.15579838e-05, 2.00357430e-04, 2.35531875e-05, 7.90689472e-05,                                8.77165131e-06, 3.06314731e-05, 4.90836553e-07, 2.05189427e-06, 1.06182361e-05, 8.61854709e-06, 2.59367275e-06, 1.03045705e-05,                                1.19495956e-05, 1.91167119e-05, 1.87774866e-05, 6.35949802e-05, 4.97294171e-05, 1.62102243e-04, 4.65230505e-04, 4.65599070e-04,                                8.43505426e-06, 3.85718719e-05, 7.01297271e-06, 2.90153474e-05, 1.35256912e-06, 5.36022884e-06, 5.68299553e-06, 7.78375952e-06,                                6.90160873e-06, 2.14123814e-05, 9.12849853e-06, 2.98409658e-05, 4.77634022e-05, 7.77732482e-05, 2.81843590e-05, 1.27530458e-04,                                2.29551233e-03, 1.85541944e-03, 1.08949424e-04, 4.72757093e-04, 2.26675416e-05, 9.38532988e-05, 3.22363541e-06, 1.01127261e-05,                                3.32061076e-06, 1.02077617e-05, 1.13895813e-05, 1.18419806e-05, 1.74660222e-06, 8.33330210e-06, 9.96226434e-05, 2.25688087e-04,                                3.46329118e-04, 1.35647966e-03, 1.07659995e-02, 6.88261316e-03, 9.38796355e-04, 3.08569415e-03, 6.49305739e-05, 2.93897498e-04,                                3.95985527e-06, 4.04040493e-06, 3.77971593e-07, 1.62265688e-06, 8.65915702e-06, 7.92596545e-06, 2.82519585e-06, 1.26858981e-05,                                3.52584425e-05, 1.17467204e-04, 1.45223811e-04, 6.18193626e-04, 1.10799096e-03, 3.26932902e-03, 3.22712205e-04, 9.86605183e-04,                                5.57644302e-05, 1.63950633e-05, 3.96866909e-06, 3.42768823e-06, 8.63305505e-07, 3.41952051e-06, 4.14347972e-06, 6.06099665e-06,                                5.04105562e-06, 1.68970512e-05, 1.20523869e-05, 4.35585368e-05, 4.65013087e-05, 1.15553749e-04, 1.22153586e-05, 6.69946183e-05,                                6.02755889e-05, 1.35810706e-04, 5.57644301e-05, 1.63950632e-05, 2.04225963e-06, 2.69772359e-06, 1.89238035e-06, 5.92114973e-06,                                2.86429405e-06, 8.57844486e-06, 6.14551110e-06, 7.64310865e-06, 6.76217918e-07, 3.17064744e-06, 2.25898364e-05, 3.02682804e-05,                                5.57644299e-05, 1.63950631e-05, 5.57644299e-05, 1.63950631e-05, 5.57644300e-05, 1.63950631e-05, 1.26028380e-06, 3.78571320e-06,                                2.30171732e-06, 2.68425486e-06, 1.91332217e-07, 8.59812588e-07, 3.38962682e-06, 6.62133933e-06, 4.01319599e-06, 1.54793037e-05,                                2.57812642e-05, 1.77579239e-05, 5.57644299e-05, 1.63950631e-05, 5.57644299e-05, 1.63950631e-05, 5.57644299e-05, 1.63950631e-05,                                2.24887594e-08, 1.29799383e-07, 4.32216436e-07, 1.01112243e-06, 4.38095096e-07, 1.80529407e-06, 1.26595410e-05, 7.51293295e-06,                                5.57644297e-05, 1.63950631e-05, 5.57644297e-05, 1.63950631e-05, 5.57644298e-05, 1.63950631e-05, 5.57644299e-05, 1.63950631e-05,                                5.57644299e-05, 1.63950631e-05, 5.06622520e-06, 8.19705109e-07, 3.66075750e-05, 1.11142261e-05, 3.31719243e-05, 7.98676124e-06,                                5.74796931e-05, 1.38631868e-05, 6.60281355e-05, 1.64794418e-05, 4.56407822e-05, 1.08581064e-05, 1.79718223e-04, 9.06879870e-05,                                1.37669339e-04, 3.49313058e-05, 1.69341748e-05, 6.51759629e-05, 2.14964077e-05, 5.16553759e-06, 3.24420716e-05, 7.82018752e-06,                                3.76333870e-05, 1.24740099e-05, 2.28329459e-05, 5.41782758e-06, 8.81911387e-05, 3.69679642e-05, 1.16653265e-04, 2.82099384e-05,                                6.23307539e-04, 2.34350076e-04, 1.76390162e-04, 4.62960014e-05, 9.11660830e-06, 4.69302269e-05, 2.23305242e-05, 7.23296989e-06,                                1.15127132e-05, 2.72956586e-06, 3.95007310e-05, 1.50945027e-05, 3.80466242e-05, 9.12116617e-06, 1.13192423e-04, 4.43969971e-05,                                2.06086291e-04, 5.13948330e-05, 3.36814902e-03, 8.64373214e-04, 5.18992214e-04, 2.94313539e-04, 2.16160621e-06, 1.09954042e-05,                                1.92997387e-05, 7.29802395e-06, 1.60762774e-05, 3.84482621e-06, 3.57933195e-05, 1.15070282e-05, 3.77272027e-05, 9.14413477e-06,                                1.79388045e-04, 4.58498355e-05, 1.29835159e-03, 6.36740183e-04, 4.17322760e-02, 1.04249855e-02, 1.44730276e-03, 3.63628547e-03,                                8.06785333e-06, 4.60811880e-05, 1.01199448e-05, 2.33659044e-06, 1.33949179e-05, 3.22298289e-06, 2.55841100e-05, 6.18289956e-06,                                3.15759740e-05, 1.11322922e-05, 6.34234289e-06, 1.09490686e-06, 3.35079258e-04, 2.30580561e-04, 3.04536958e-03, 7.73963557e-04,                                3.14874782e-04, 1.02235350e-03, 5.57644303e-05, 1.63950633e-05, 1.05273794e-05, 2.54309492e-06, 1.23750222e-05, 4.10560362e-06,                                7.72894922e-06, 1.83330473e-06, 2.66470181e-05, 1.07429771e-05, 5.17160210e-05, 1.31172153e-05, 8.86105385e-05, 5.03252013e-05,                                2.15297716e-05, 8.74122987e-05, 1.50659852e-05, 7.37222994e-05, 5.57644302e-05, 1.63950632e-05, 3.50352003e-06, 8.30805015e-07,                                1.07368796e-05, 4.15597902e-06, 1.67793201e-05, 4.23721935e-06, 1.88646343e-05, 6.83037660e-06, 1.61034943e-05, 4.28059740e-06,                                6.71838320e-06, 2.98053399e-05, 5.53260567e-05, 2.01356663e-05, 5.57644300e-05, 1.63950631e-05, 5.57644300e-05, 1.63950632e-05,                                7.28538331e-06, 1.84001508e-06, 7.44278987e-06, 2.61964127e-06, 6.52036954e-06, 1.73462961e-06, 1.68185523e-06, 8.12205910e-06,                                9.91427059e-06, 2.39105009e-05, 6.70365530e-07, 2.96016962e-06, 5.57644299e-05, 1.63950631e-05, 5.57644300e-05, 1.63950631e-05,                                5.57644300e-05, 1.63950631e-05, 4.14436092e-07, 1.61678971e-06, 4.01839308e-07, 1.93043931e-06, 2.07961308e-06, 4.76169106e-06,                                3.30187190e-07, 1.44157495e-06, 5.57644298e-05, 1.63950631e-05, 5.57644298e-05, 1.63950631e-05, 5.57644299e-05, 1.63950631e-05,                                5.57644299e-05, 1.63950631e-05, 5.57644299e-05, 1.63950631e-05, 4.04961157e-04, 8.80881016e-05, 4.24338170e-04, 1.00189233e-04,                                5.92228844e-04, 1.39787145e-04, 7.79679097e-04, 1.83866852e-04, 1.05763204e-03, 2.38487476e-04, 1.35251622e-03, 3.22932195e-04,                                1.52250046e-03, 3.94522129e-04, 1.28158938e-03, 6.45600876e-04, 1.38792482e-04, 5.38903108e-04, 3.95103512e-04, 9.07591885e-05,                                4.38119438e-04, 1.03435992e-04, 5.81167361e-04, 1.37251470e-04, 7.82414796e-04, 1.84800679e-04, 1.06740692e-03, 2.52080270e-04,                                1.49011897e-03, 3.61419680e-04, 1.89061493e-03, 4.53634386e-04, 2.18879218e-03, 1.06671745e-03, 4.66579997e-04, 1.21035811e-03,                                3.50056515e-04, 8.16089883e-05, 4.06134039e-04, 9.57830022e-05, 5.24689540e-04, 1.23930079e-04, 7.25276868e-04, 1.71058589e-04,                                9.82931343e-04, 2.32589567e-04, 1.62835778e-03, 4.15463584e-04, 2.72688007e-03, 7.12670538e-04, 4.45191795e-03, 1.93935948e-03,                                1.05675368e-03, 1.49990189e-03, 2.57071582e-04, 5.97621137e-05, 3.27715799e-04, 7.66847421e-05, 4.12344786e-04, 9.74069289e-05,                                6.14698141e-04, 1.43646233e-04, 8.53064817e-04, 2.02299408e-04, 1.27054701e-03, 3.56684376e-04, 1.76267485e-03, 5.96604198e-04,                                1.37823226e-03, 1.85991721e-03, 4.68101489e-04, 5.97565245e-04, 1.07794284e-04, 1.72984869e-05, 2.39504991e-04, 5.44901321e-05,                                3.35266192e-04, 7.89566907e-05, 4.73418467e-04, 1.04461264e-04, 6.21458834e-04, 1.15135968e-04, 8.36423961e-04, 2.29595655e-04,                                7.64001617e-04, 4.09483067e-04, 1.73697105e-04, 6.42230062e-04, 5.57644311e-05, 1.63950634e-05, 1.31573570e-04, 3.08464711e-05,                                1.90763002e-04, 4.50495794e-05, 2.56495527e-04, 6.16543288e-05, 3.32865298e-04, 7.97477167e-05, 4.04309382e-04, 1.09083782e-04,                                4.57284050e-04, 1.18715208e-04, 3.30496571e-04, 2.31761704e-04, 8.63126952e-05, 2.33170792e-04, 5.57644310e-05, 1.63950634e-05,                                1.13600052e-04, 2.74511686e-05, 1.39595829e-04, 3.41567914e-05, 1.72480579e-04, 5.12860838e-05, 2.08171978e-04, 5.42023558e-05,                                1.99878222e-04, 1.24265646e-04, 1.20311477e-04, 2.91889926e-04, 1.11408173e-04, 1.00817305e-04, 5.57644307e-05, 1.63950633e-05,                                5.57644308e-05, 1.63950633e-05, 7.18914783e-05, 2.20385875e-05, 8.46786010e-05, 2.19786576e-05, 8.46930038e-05, 5.78736108e-05,                                5.96237423e-05, 1.47463197e-04, 8.29053575e-05, 8.41778077e-05, 6.46055141e-05, 9.95536962e-05, 5.57644306e-05, 1.63950633e-05,                                5.57644306e-05, 1.63950633e-05, 5.57644306e-05, 1.63950633e-05, 2.40227214e-05, 1.74617915e-05, 1.85971757e-05, 4.14224546e-05,                                2.86524697e-05, 3.19955059e-05, 3.31422861e-05, 4.97936614e-05, 5.57644304e-05, 1.63950632e-05, 5.57644305e-05, 1.63950632e-05,                                5.57644305e-05, 1.63950632e-05, 5.57644306e-05, 1.63950633e-05, 5.57644306e-05, 1.63950632e-05, 1.31033095e-04, 2.13797508e-05,                                2.94365922e-04, 6.95591106e-05, 5.07417356e-04, 1.19905205e-04, 1.24030561e-03, 2.89189574e-04, 4.66409087e-05, 7.36646331e-06,                                3.98066455e-03, 9.40657249e-04, 2.80264435e-03, 6.62527904e-04, 1.22759829e-02, 3.09687188e-03, 3.68994393e-04, 1.56078286e-03,                                1.83658853e-04, 4.33895317e-05, 4.18794798e-04, 9.89806811e-05, 1.17918235e-04, 2.78637316e-05, 1.30324567e-03, 3.07753080e-04,                                9.44049404e-04, 2.23059909e-04, 4.75927211e-03, 1.12508508e-03, 1.20388937e-02, 2.84732441e-03, 7.53373999e-02, 1.88300825e-02,                                6.52185494e-03, 1.60117687e-02, 4.53338275e-05, 1.07108978e-05, 3.92290190e-04, 9.26089678e-05, 5.03081979e-05, 7.99043044e-06,                                1.19588996e-03, 2.82556882e-04, 2.11633038e-03, 5.00141861e-04, 6.53648510e-03, 1.54529868e-03, 6.98716869e-02, 1.74684424e-02,                                9.57612618e-01, 2.39220093e-01, 3.56561722e-02, 7.47227866e-02, 9.49843156e-05, 2.24413346e-05, 3.32704456e-04, 7.85953693e-05,                                4.56324550e-04, 1.07818834e-04, 8.33121185e-04, 1.96859592e-04, 2.26546276e-03, 5.32221420e-04, 9.37619019e-04, 2.21535765e-04,                                1.10481496e-02, 2.82860693e-03, 1.47528811e-03, 6.13484993e-03, 1.69129123e-03, 6.15783840e-03, 5.17689061e-05, 8.21765022e-06,                                2.19365258e-04, 5.18261343e-05, 5.15053654e-04, 1.21651610e-04, 1.54474825e-04, 3.64849741e-05, 2.08061533e-03, 3.40768715e-04,                                1.60813060e-02, 4.01152592e-03, 4.49589035e-03, 1.14655429e-03, 2.27481175e-04, 9.57439656e-04, 5.57644354e-05, 1.63950641e-05,                                1.92700024e-04, 4.53436865e-05, 4.49233546e-05, 1.06124440e-05, 4.06199249e-04, 9.61082231e-05, 2.56185618e-04, 6.05427335e-05,                                1.14484924e-03, 2.84479530e-04, 2.40907716e-03, 6.04119178e-04, 6.95924761e-05, 3.33717299e-04, 2.62027104e-04, 6.98336592e-04,                                5.57644345e-05, 1.63950639e-05, 1.61712384e-04, 3.82558340e-05, 8.08587298e-05, 1.91086543e-05, 3.18691342e-04, 7.97782560e-05,                                4.45617292e-04, 1.11563040e-04, 5.97362984e-04, 1.49705591e-04, 3.31055235e-04, 7.89413661e-04, 1.19797904e-06, 6.48517387e-06,                                5.57644334e-05, 1.63950637e-05, 5.57644336e-05, 1.63950638e-05, 1.09496804e-04, 2.76022316e-05, 1.38778540e-04, 3.47266387e-05,                                1.89025208e-04, 4.74013407e-05, 1.07126495e-04, 2.62186213e-04, 1.15256729e-06, 5.65137348e-06, 6.74071482e-05, 2.19860545e-04,                                5.57644328e-05, 1.63950637e-05, 5.57644330e-05, 1.63950637e-05, 5.57644331e-05, 1.63950637e-05, 1.78683945e-06, 8.69902672e-06,                                2.20882601e-05, 5.51097993e-05, 3.30770638e-07, 1.63726273e-06, 2.89589324e-05, 9.07118225e-05, 5.57644324e-05, 1.63950636e-05,                                5.57644325e-05, 1.63950636e-05, 5.57644327e-05, 1.63950636e-05, 5.57644328e-05, 1.63950636e-05, 5.57644329e-05, 1.63950636e-05,                                6.08815856e-05, 9.70576090e-06, 4.41124798e-04, 1.04866957e-04, 8.39976588e-04, 1.98288593e-04, 1.62662978e-03, 3.42351130e-04,                                2.63582720e-03, 4.36062817e-04, 5.36991190e-03, 1.26768325e-03, 9.34367522e-03, 2.32494408e-03, 1.14835143e-02, 2.87589654e-03,                                4.46536895e-03, 2.69744384e-03, 2.47842120e-04, 5.85902715e-05, 4.96754097e-04, 1.17606148e-04, 8.98205518e-04, 2.12247919e-04,                                1.68352053e-03, 3.95828647e-04, 3.20918627e-03, 7.34242616e-04, 5.49338983e-03, 1.29913801e-03, 1.30309595e-02, 3.27909342e-03,                                1.97239650e-02, 4.98710467e-03, 6.33757303e-03, 5.40483968e-03, 3.09526986e-04, 7.33842604e-05, 4.74756907e-04, 1.11644037e-04,                                8.47831249e-04, 1.81904818e-04, 1.43255265e-03, 3.38565877e-04, 3.68907774e-03, 8.76564826e-04, 7.67806024e-03, 1.82091108e-03,                                1.92594287e-02, 4.97147468e-03, 4.17899568e-02, 1.12197361e-02, 7.20590543e-03, 1.47435788e-02, 2.97897460e-04, 6.97723340e-05,                                3.63055899e-04, 8.58036019e-05, 7.91562550e-04, 1.86049157e-04, 1.42719089e-03, 3.37351755e-04, 3.10109827e-03, 7.13650401e-04,                                5.85521399e-03, 1.40113631e-03, 1.04868724e-02, 2.72946988e-03, 1.20713812e-02, 6.32133477e-03, 6.14520885e-04, 2.59487198e-03,                                2.81134664e-04, 5.84688985e-05, 3.62512641e-04, 8.56616827e-05, 6.71267148e-04, 1.58156710e-04, 1.12375859e-03, 2.61891868e-04,                                1.95306159e-03, 3.28793127e-04, 3.78815891e-03, 9.86539506e-04, 4.70448442e-03, 1.18517814e-03, 3.24198839e-03, 1.93290459e-03,                                5.57644367e-05, 1.63950643e-05, 2.50891992e-04, 5.77201693e-05, 3.20173124e-04, 7.60204365e-05, 5.15136051e-04, 1.22415605e-04,                                8.12158573e-04, 2.03104963e-04, 1.28967302e-03, 3.22863411e-04, 1.47980541e-03, 7.33175437e-04, 5.10465677e-04, 1.71348134e-03,                                6.30917884e-04, 6.58430330e-04, 5.57644356e-05, 1.63950641e-05, 1.92234825e-04, 4.56014607e-05, 2.45924715e-04, 6.15666540e-05,                                3.75557546e-04, 9.38816184e-05, 4.78820394e-04, 1.44893239e-04, 6.30777505e-04, 1.63760789e-04, 5.19151647e-04, 4.58955683e-04,                                1.53856650e-04, 4.47218221e-04, 5.57644342e-05, 1.63950639e-05, 5.57644345e-05, 1.63950639e-05, 1.23403571e-04, 3.09808405e-05,                                1.43364125e-04, 4.27733166e-05, 1.96022136e-04, 5.09275748e-05, 1.89824685e-04, 1.60287756e-04, 1.35560831e-04, 2.75330946e-04,                                1.07112644e-04, 2.36372438e-04, 5.57644335e-05, 1.63950638e-05, 5.57644337e-05, 1.63950638e-05, 5.57644339e-05, 1.63950638e-05,                                1.25272989e-05, 4.22205112e-05, 3.81923807e-05, 3.77128791e-05, 3.89869569e-05, 8.16171803e-05, 4.46608427e-05, 9.35422903e-05,                                5.57644330e-05, 1.63950637e-05, 5.57644331e-05, 1.63950637e-05, 5.57644333e-05, 1.63950637e-05, 5.57644335e-05, 1.63950637e-05,                                5.57644336e-05, 1.63950638e-05, 3.35659722e-06, 2.67713752e-06, 1.68940500e-05, 6.22202871e-05, 1.42802441e-04, 2.00830384e-04,                                6.19513863e-06, 2.62253382e-05, 3.87299882e-04, 2.24865637e-04, 6.47564175e-05, 2.69190887e-04, 1.23727359e-03, 1.52075399e-03,                                5.09629190e-04, 1.93055934e-03, 2.15634207e-04, 8.22977080e-04, 4.28798789e-05, 6.12039103e-05, 1.90931367e-06, 8.21750778e-06,                                1.32630389e-04, 1.90140958e-04, 2.02513043e-05, 8.43262147e-05, 4.25245283e-04, 5.09253124e-04, 2.37973241e-04, 8.95425557e-04,                                4.97057679e-04, 1.83155778e-03, 3.29473383e-03, 4.71205653e-03, 3.29775698e-05, 1.50617170e-04, 4.66513694e-05, 6.87253573e-05,                                5.72071325e-06, 2.37552450e-05, 1.12726072e-04, 6.94397017e-05, 6.11052802e-05, 2.29274409e-04, 1.42794818e-04, 5.25401943e-04,                                1.24145756e-03, 1.71345756e-03, 7.37420646e-05, 3.17975117e-04, 5.95384945e-03, 8.49638227e-03, 1.22245522e-04, 6.25427421e-04,                                4.01364881e-05, 4.84004777e-05, 1.55210283e-05, 5.82603523e-05, 3.05523603e-05, 1.12004967e-04, 2.31928990e-04, 3.22397455e-04,                                1.19096335e-05, 5.11313761e-05, 8.67880306e-04, 1.26193875e-03, 1.24586210e-04, 5.21302504e-04, 2.07815393e-03, 2.86706360e-03,                                4.90029276e-05, 2.73888938e-04, 1.07228300e-05, 8.13246149e-06, 5.90732696e-05, 8.14593786e-05, 2.57211177e-06, 1.10565432e-05,                                1.66682845e-04, 2.39186121e-04, 2.34879043e-05, 1.80733546e-05, 5.05414399e-04, 6.29281497e-04, 1.91705070e-04, 7.16836857e-04,                                1.64491544e-04, 6.26471293e-04, 5.57644355e-05, 1.63950641e-05, 9.32864083e-07, 3.96176761e-06, 4.72654146e-05, 6.81870181e-05,                                6.16199267e-06, 2.56720631e-05, 1.08386851e-04, 1.34266864e-04, 5.31651426e-05, 1.97784391e-04, 5.67565617e-05, 2.24590989e-04,                                1.15095514e-04, 4.62708235e-04, 3.50740038e-06, 1.66005299e-05, 5.57644349e-05, 1.63950640e-05, 2.24302080e-06, 9.29183196e-06,                                3.27554221e-05, 4.05237583e-05, 1.55171503e-05, 5.79554573e-05, 1.84880627e-05, 6.92373063e-05, 1.03113878e-04, 1.49492136e-04,                                2.64315151e-06, 1.21389612e-05, 4.18086087e-05, 1.44479523e-04, 5.57644340e-05, 1.63950638e-05, 5.57644342e-05, 1.63950639e-05,                                5.00932777e-06, 1.87884319e-05, 5.54135638e-06, 2.07277488e-05, 3.18281811e-05, 4.59073522e-05, 9.82034968e-07, 4.51267568e-06,                                3.40086856e-05, 9.83497945e-05, 3.37508408e-06, 1.59058753e-05, 5.57644334e-05, 1.63950637e-05, 5.57644337e-05, 1.63950638e-05,                                5.57644338e-05, 1.63950638e-05, 2.82766101e-06, 1.12136282e-05, 1.92740920e-07, 8.99675004e-07, 8.34149953e-06, 2.48309067e-05,                                1.55836489e-06, 7.16558832e-06, 5.57644329e-05, 1.63950636e-05, 5.57644331e-05, 1.63950637e-05, 5.57644333e-05, 1.63950637e-05,                                5.57644335e-05, 1.63950637e-05, 5.57644335e-05, 1.63950637e-05, 3.96540124e-06, 5.61206399e-06, 2.24297749e-06, 1.17310272e-05,                                4.70501894e-05, 8.63119527e-05, 9.02516894e-06, 3.52366525e-05, 5.84819306e-05, 4.73607045e-05, 4.83659889e-05, 1.59588371e-04,                                2.60226969e-05, 1.24296660e-04, 3.01697626e-04, 9.01421375e-04, 2.06551125e-05, 1.18567853e-04, 1.48230219e-05, 2.78994330e-05,                                2.97531368e-06, 1.43898496e-05, 2.14819550e-05, 7.92861001e-05, 1.37770344e-05, 5.29361247e-05, 9.48562241e-06, 4.49999750e-05,                                1.21876345e-04, 3.85242296e-04, 5.64273912e-05, 3.03562265e-04, 1.01817861e-03, 1.95943906e-03, 7.79025698e-05, 3.16479089e-04,                                7.81837925e-06, 2.97058710e-05, 4.03988564e-06, 1.48129823e-05, 2.52937862e-06, 2.17615412e-06, 2.87708600e-05, 9.49542139e-05,                                1.77481640e-05, 9.36134501e-05, 3.70188794e-04, 6.89991334e-04, 9.69383559e-05, 4.77233739e-04, 8.60448725e-04, 3.12260106e-03,                                1.45448365e-04, 5.42336180e-04, 8.69954194e-07, 4.17634232e-06, 7.29890766e-06, 2.40857454e-05, 3.61161965e-06, 1.90677984e-05,                                6.99372839e-05, 1.32110361e-04, 1.73286965e-05, 8.46745972e-05, 1.43103711e-04, 5.32519151e-04, 7.62005839e-05, 3.15887542e-04,                                4.59950434e-05, 2.27067006e-04, 4.26867525e-05, 1.39041773e-04, 1.05363642e-06, 9.35787370e-07, 1.78199799e-05, 3.29582181e-05,                                3.72958970e-06, 1.81865021e-05, 2.75140566e-05, 1.00907614e-04, 1.55870612e-05, 3.23675541e-05, 1.10988644e-05, 5.39564115e-05,                                6.78165253e-05, 2.60498801e-04, 1.40225693e-05, 7.73737162e-05, 5.57644352e-05, 1.63950640e-05, 8.05150711e-07, 4.15704497e-06,                                7.64134664e-06, 2.83234441e-05, 4.06234019e-06, 1.63063519e-05, 2.41959773e-06, 1.17855530e-05, 2.06435545e-05, 6.86664370e-05,                                4.89241967e-06, 2.94425003e-05, 4.34371869e-05, 1.69498477e-04, 1.62981093e-05, 5.17209807e-05, 5.57644348e-05, 1.63950640e-05,                                1.14840016e-06, 4.77393199e-06, 7.23337422e-07, 3.52091244e-06, 6.08399817e-06, 2.12418842e-05, 2.00623845e-06, 1.09583918e-05,                                3.20933388e-05, 6.26126463e-05, 5.56923777e-06, 2.35156287e-05, 1.99097016e-05, 6.93711197e-05, 5.57644339e-05, 1.63950638e-05,                                5.57644341e-05, 1.63950638e-05, 1.88666218e-06, 7.20989295e-06, 5.93497920e-07, 3.24500096e-06, 9.73420891e-06, 1.89958297e-05,                                2.59190492e-06, 1.09685963e-05, 1.41984756e-05, 4.87690613e-05, 2.47805460e-05, 2.21192517e-05, 5.57644334e-05, 1.63950637e-05,                                5.57644336e-05, 1.63950638e-05, 5.57644337e-05, 1.63950638e-05, 1.08060297e-06, 4.02699229e-06, 2.80386899e-07, 1.49905763e-06,                                2.43247608e-06, 9.47357968e-06, 1.25950930e-05, 9.61868594e-06, 5.57644329e-05, 1.63950636e-05, 5.57644330e-05, 1.63950637e-05,
                                5.57644333e-05, 1.63950637e-05, 5.57644334e-05, 1.63950637e-05, 5.57644335e-05, 1.63950637e-05])
    s = solver.SolverPowerIt(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
    print(s.getVolumes())
    s.solve(inner_solver="SparseLU")
    # np.set_printoptions(threshold=100000, edgeitems=10, linewidth=140)
    # print(s.getEigenValues())
    # print(repr(s.getEigenVectors()[0]))
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    # s.solve(inner_solver="LeastSquaresConjugateGradient")
    # print(s.getEigenValues()[0])
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    # npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
    #                         decimal=4)

    # s.solve(inner_solver="BiCGSTAB", outer_max_iter=1000)
    # assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)


    s.solve(inner_solver="BiCGSTAB", inner_precond="IncompleteLUT")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)

    s.solve(inner_solver="GMRES")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-4)

def test_solverSlepc_3d(macrolib_3d):
    solver.init_slepc()
    set_log_level(log_level.debug)
    macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d
    ref_eigenvector = np.array([1.52295683e-06, 4.87027536e-06, 1.11499210e-05, 8.73135870e-06, 7.98187361e-07, 3.32735566e-06, 1.69864292e-05, 1.38681493e-05,                                4.21430281e-06, 1.67116873e-05, 1.55878358e-05, 2.47107954e-05, 2.19070256e-05, 6.82819428e-05, 1.79828197e-05, 5.58058174e-05,                                7.06084047e-06, 2.41111842e-05, 4.46203912e-07, 1.86456355e-06, 9.64235714e-06, 7.79643343e-06, 2.34125002e-06, 9.23797737e-06,                                9.88244217e-06, 1.38932138e-05, 1.28507375e-05, 3.91466677e-05, 1.39463033e-05, 4.25920189e-05, 5.46051681e-05, 5.07633197e-05,                                3.35715877e-06, 1.42921759e-05, 3.67169174e-06, 1.52087666e-05, 1.22385874e-06, 4.84607664e-06, 5.04693109e-06, 6.87133281e-06,                                6.08081998e-06, 1.85555419e-05, 6.58712778e-06, 2.01141413e-05, 2.39686752e-05, 2.32378413e-05, 2.56270278e-06, 1.08733829e-05,                                7.80576816e-05, 6.09114360e-05, 1.64976155e-05, 6.41278891e-05, 3.85447515e-06, 1.39814676e-05, 2.89346258e-06, 9.06854574e-06,                                2.93175146e-06, 8.98789028e-06, 9.93150515e-06, 9.80716805e-06, 8.47892836e-07, 3.61595861e-06, 1.84170981e-05, 1.62356413e-05,                                6.52514772e-06, 2.56445819e-05, 7.61540982e-05, 6.43598201e-05, 2.13534960e-05, 8.53982297e-05, 8.04879442e-06, 2.53874105e-05,                                3.50987647e-06, 3.58563115e-06, 3.31091063e-07, 1.41726354e-06, 7.36365434e-06, 6.19697902e-06, 1.70415569e-06, 6.72537791e-06,                                5.17486012e-06, 9.92608673e-06, 9.57775703e-06, 3.08100343e-05, 1.69089489e-05, 5.14551025e-05, 2.64307968e-05, 4.65882785e-05,                                5.21854204e-05, 1.49620258e-05, 3.45294073e-06, 2.97851610e-06, 7.48212622e-07, 2.95428536e-06, 3.39401327e-06, 4.71017130e-06,                                3.78409317e-06, 1.17751169e-05, 5.24810587e-06, 1.58002140e-05, 1.30762207e-05, 1.52815945e-05, 1.52252661e-06, 6.67952556e-06,                                2.56987674e-05, 2.27128710e-05, 5.21854204e-05, 1.49620258e-05, 1.70713816e-06, 2.26697429e-06, 1.62434038e-06, 5.06700972e-06,                                2.36685674e-06, 7.07240185e-06, 5.14296100e-06, 6.09589384e-06, 5.07350118e-07, 2.26788770e-06, 1.73609171e-05, 1.60149017e-05,                                5.21854203e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05, 5.21854204e-05, 1.49620258e-05, 1.01464814e-06, 3.05612054e-06,                                1.97108661e-06, 2.28010218e-06, 1.65402252e-07, 7.42088742e-07, 3.06409756e-06, 5.89560616e-06, 3.72614804e-06, 1.43104097e-05,                                2.37332069e-05, 1.51661456e-05, 5.21854203e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05,                                1.89294948e-08, 1.08578104e-07, 3.74775686e-07, 8.81635541e-07, 4.03473888e-07, 1.65584741e-06, 1.18342925e-05, 6.91968487e-06,                                5.21854202e-05, 1.49620257e-05, 5.21854202e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05,                                5.21854203e-05, 1.49620258e-05, 4.62027996e-06, 7.47767253e-07, 3.34829214e-05, 1.01641855e-05, 3.05216266e-05, 7.34923876e-06,                                5.27863979e-05, 1.27200615e-05, 6.09634492e-05, 1.47940834e-05, 3.43606536e-05, 8.15084321e-06, 1.15417880e-04, 4.61596313e-05,                                1.19942350e-04, 3.04008270e-05, 1.51798488e-05, 5.84662899e-05, 1.95371943e-05, 4.69546731e-06, 2.94911827e-05, 7.10931916e-06,                                3.44925455e-05, 1.13889174e-05, 1.99275954e-05, 4.72612987e-06, 7.44045938e-05, 2.81354171e-05, 6.81707679e-05, 1.63087616e-05,                                1.61806043e-04, 5.12737721e-05, 1.49090993e-04, 3.88925465e-05, 8.23985711e-06, 4.19736552e-05, 2.02647262e-05, 6.56030323e-06,                                1.01334899e-05, 2.40312787e-06, 3.55827062e-05, 1.34459458e-05, 3.20134054e-05, 7.65730270e-06, 7.69207586e-05, 2.42763593e-05,                                8.62384491e-05, 2.08381920e-05, 2.40801615e-04, 6.13795536e-05, 2.85433436e-04, 1.18521680e-04, 1.70162974e-06, 8.21836722e-06,                                1.73666295e-05, 6.56237690e-06, 1.42195535e-05, 3.40122398e-06, 3.16179347e-05, 1.00304955e-05, 3.06007816e-05, 7.36998716e-06,                                5.61922889e-05, 1.35707709e-05, 7.84715928e-05, 2.80804867e-05, 2.47366906e-04, 6.19178169e-05, 1.00666662e-04, 2.43982294e-04,                                2.79953812e-06, 1.34612058e-05, 8.98714666e-06, 2.07538361e-06, 1.18121040e-05, 2.84246243e-06, 2.20615247e-05, 5.32302828e-06,                                2.61981782e-05, 8.43618617e-06, 2.62265314e-06, 4.22238389e-07, 5.38965664e-05, 2.25403865e-05, 7.73762741e-05, 1.96722257e-05,                                3.28107111e-05, 9.48516845e-05, 5.21854205e-05, 1.49620259e-05, 9.16346365e-06, 2.21406228e-06, 1.08267200e-05, 3.58402168e-06,                                6.33754321e-06, 1.50349183e-06, 2.18163843e-05, 8.35981863e-06, 3.08109993e-05, 7.77980148e-06, 3.57461229e-05, 1.31924465e-05,                                5.43307280e-06, 2.16358980e-05, 7.05565926e-06, 2.93424028e-05, 5.21854205e-05, 1.49620258e-05, 2.85422939e-06, 6.77292750e-07,                                9.28727050e-06, 3.58497595e-06, 1.38096156e-05, 3.48859606e-06, 1.59447768e-05, 5.69315458e-06, 1.32111022e-05, 3.51100452e-06,                                5.21364097e-06, 2.23319468e-05, 5.17296521e-05, 1.83604934e-05, 5.21854204e-05, 1.49620258e-05, 5.21854204e-05, 1.49620258e-05,                                5.76763880e-06, 1.45795942e-06, 6.40262762e-06, 2.24871279e-06, 5.61077024e-06, 1.49383158e-06, 1.48394962e-06, 7.15436156e-06,                                8.98608845e-06, 2.16773494e-05, 6.16431047e-07, 2.70320192e-06, 5.21854204e-05, 1.49620258e-05, 5.21854204e-05, 1.49620258e-05,                                5.21854204e-05, 1.49620258e-05, 3.57753438e-07, 1.39538680e-06, 3.49038644e-07, 1.67719790e-06, 1.83809207e-06, 4.23280868e-06,                                3.07488051e-07, 1.33891320e-06, 5.21854202e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05,                                5.21854203e-05, 1.49620258e-05, 5.21854203e-05, 1.49620258e-05, 3.70154524e-04, 8.05253787e-05, 3.88510830e-04, 9.17403474e-05,                                5.46961289e-04, 1.29114030e-04, 7.25616006e-04, 1.71130155e-04, 9.93387420e-04, 2.24051885e-04, 1.28333228e-03, 3.06530677e-04,                                1.46061362e-03, 3.79015554e-04, 1.24571019e-03, 6.28593785e-04, 1.35287431e-04, 5.25690274e-04, 3.60477629e-04, 8.28127189e-05,                                4.00459426e-04, 9.45551204e-05, 5.34385537e-04, 1.26216887e-04, 7.24235486e-04, 1.71077873e-04, 9.96292733e-04, 2.35305421e-04,                                1.40646152e-03, 3.41139916e-04, 1.81051549e-03, 4.34531095e-04, 2.14257732e-03, 1.04219177e-03, 4.57719650e-04, 1.18711922e-03,                                3.17933688e-04, 7.41304196e-05, 3.68974623e-04, 8.70308581e-05, 4.77628926e-04, 1.12829878e-04, 6.62467986e-04, 1.56292962e-04,                                9.01832865e-04, 2.13425521e-04, 1.51332527e-03, 3.86237167e-04, 2.58709744e-03, 6.76584031e-04, 4.38696080e-03, 1.89616353e-03,                                1.04007811e-03, 1.47340209e-03, 2.31766383e-04, 5.38957015e-05, 2.94570239e-04, 6.89436845e-05, 3.68829947e-04, 8.71405635e-05,                                5.48919915e-04, 1.28385721e-04, 7.56112345e-04, 1.79401936e-04, 1.11476605e-03, 3.14499400e-04, 1.51699860e-03, 5.24681261e-04,                                1.30589482e-03, 1.75738449e-03, 4.50547579e-04, 5.74761397e-04, 9.59063293e-05, 1.53924322e-05, 2.12428908e-04, 4.83302774e-05,                                2.95118034e-04, 6.95183683e-05, 4.12770969e-04, 9.12591705e-05, 5.29900597e-04, 9.82780078e-05, 6.84760703e-04, 1.89902748e-04,                                6.42462599e-04, 3.58608921e-04, 1.58416483e-04, 5.87380961e-04, 5.21854216e-05, 1.49620261e-05, 1.15488271e-04, 2.70760812e-05,                                1.67269719e-04, 3.94954317e-05, 2.23312450e-04, 5.36822986e-05, 2.86557584e-04, 6.86527754e-05, 3.41812959e-04, 9.22383937e-05,                                3.76956949e-04, 9.80328799e-05, 2.78175294e-04, 2.01341368e-04, 7.66098583e-05, 2.08421809e-04, 5.21854214e-05, 1.49620261e-05,                                9.91169146e-05, 2.39524912e-05, 1.21509526e-04, 2.97324296e-05, 1.49310093e-04, 4.44299325e-05, 1.78276870e-04, 4.64379691e-05,                                1.70243863e-04, 1.05594795e-04, 1.01562265e-04, 2.46682738e-04, 9.72981659e-05, 8.69419044e-05, 5.21854212e-05, 1.49620260e-05,                                5.21854212e-05, 1.49620260e-05, 6.24880231e-05, 1.91554871e-05, 7.32803358e-05, 1.90270942e-05, 7.34347907e-05, 5.02841121e-05,                                5.18428534e-05, 1.28207556e-04, 7.33743448e-05, 7.30646481e-05, 5.81441253e-05, 8.70236275e-05, 5.21854211e-05, 1.49620260e-05,                                5.21854211e-05, 1.49620260e-05, 5.21854211e-05, 1.49620260e-05, 2.08790872e-05, 1.51770567e-05, 1.61603340e-05, 3.60057472e-05,                                2.51623741e-05, 2.80060878e-05, 3.00840007e-05, 4.42463364e-05, 5.21854209e-05, 1.49620259e-05, 5.21854209e-05, 1.49620259e-05,                                5.21854210e-05, 1.49620259e-05, 5.21854210e-05, 1.49620259e-05, 5.21854210e-05, 1.49620259e-05, 1.22193896e-04, 1.99328433e-05,                                2.80432229e-04, 6.62714859e-05, 4.88710682e-04, 1.15491184e-04, 1.20977781e-03, 2.82029049e-04, 4.58755182e-05, 7.24553097e-06,                                3.94226226e-03, 9.31599864e-04, 2.78459105e-03, 6.58268382e-04, 1.22544243e-02, 3.09123102e-03, 3.68394296e-04, 1.55823629e-03,                                1.71307972e-04, 4.04758932e-05, 3.98139489e-04, 9.41063416e-05, 1.10935458e-04, 2.62169046e-05, 1.26493611e-03, 2.98716086e-04,                                9.19782872e-04, 2.17334719e-04, 4.70619155e-03, 1.11254539e-03, 1.20047482e-02, 2.83926959e-03, 7.53794302e-02, 1.88405808e-02,                                6.52177572e-03, 1.60112292e-02, 4.02460448e-05, 9.51123800e-06, 3.68249733e-04, 8.69404473e-05, 4.76127742e-05, 7.56275501e-06,                                1.14443782e-03, 2.70420013e-04, 2.04723816e-03, 4.83841906e-04, 6.45419737e-03, 1.52588064e-03, 6.98524212e-02, 1.74636520e-02,                                9.58793742e-01, 2.39515132e-01, 3.56938473e-02, 7.47944375e-02, 8.46068412e-05, 1.99933047e-05, 3.04457743e-04, 7.19326563e-05,                                4.18093550e-04, 9.87982957e-05, 7.68574110e-04, 1.81630637e-04, 2.08609401e-03, 4.90690431e-04, 7.28337831e-04, 1.72148961e-04,                                1.08386197e-02, 2.77584093e-03, 1.47544127e-03, 6.13513306e-03, 1.68972671e-03, 6.15306176e-03, 4.61599351e-05, 7.32827816e-06,                                1.93506677e-04, 4.57256368e-05, 4.59696510e-04, 1.08594640e-04, 1.23114730e-04, 2.90891361e-05, 1.26314184e-03, 2.04040488e-04,                                3.38104507e-03, 8.44629356e-04, 3.54997143e-03, 9.08021312e-04, 2.18721945e-04, 9.21757974e-04, 5.21854258e-05, 1.49620268e-05,                                1.68228572e-04, 3.95882034e-05, 3.62133224e-05, 8.55822715e-06, 3.50976082e-04, 8.30576029e-05, 2.06869844e-04, 4.89042366e-05,                                8.75926007e-04, 2.18016603e-04, 1.20804601e-03, 3.04208229e-04, 5.58502001e-05, 2.74539987e-04, 2.52658488e-04, 6.67995968e-04,                                5.21854249e-05, 1.49620266e-05, 1.37847064e-04, 3.26171149e-05, 6.52329571e-05, 1.54213963e-05, 2.65832825e-04, 6.65728998e-05,                                3.60867634e-04, 9.03856332e-05, 4.70297695e-04, 1.17910686e-04, 2.47313443e-04, 6.04606126e-04, 1.03986723e-06, 5.63772647e-06,                                5.21854238e-05, 1.49620264e-05, 5.21854240e-05, 1.49620265e-05, 9.03315039e-05, 2.27835959e-05, 1.11642152e-04, 2.79489031e-05,                                1.52042306e-04, 3.81498702e-05, 8.97542301e-05, 2.20568857e-04, 9.72093162e-07, 4.77062502e-06, 5.75532686e-05, 1.86365766e-04,                                5.21854233e-05, 1.49620264e-05, 5.21854235e-05, 1.49620264e-05, 5.21854236e-05, 1.49620264e-05, 1.49156743e-06, 7.24837754e-06,                                1.83726886e-05, 4.59992027e-05, 2.77222990e-07, 1.37409048e-06, 2.55345899e-05, 7.92904597e-05, 5.21854228e-05, 1.49620263e-05,                                5.21854229e-05, 1.49620263e-05, 5.21854231e-05, 1.49620263e-05, 5.21854233e-05, 1.49620263e-05, 5.21854233e-05, 1.49620263e-05,                                5.85711838e-05, 9.33810482e-06, 4.28009476e-04, 1.01762438e-04, 8.19881115e-04, 1.93546948e-04, 1.59908748e-03, 3.36305394e-04,                                2.60704487e-03, 4.31309460e-04, 5.33572031e-03, 1.25967608e-03, 9.31201194e-03, 2.31720739e-03, 1.14587791e-02, 2.86972492e-03,                                4.45819720e-03, 2.69416111e-03, 2.36011830e-04, 5.57976175e-05, 4.78282208e-04, 1.13244131e-04, 8.71715681e-04, 2.06006651e-04,                                1.64639726e-03, 3.87089150e-04, 3.16022435e-03, 7.22986435e-04, 5.44518037e-03, 1.28776218e-03, 1.29897217e-02, 3.26897748e-03,                                1.97068988e-02, 4.98283380e-03, 6.33278809e-03, 5.40260680e-03, 2.90962139e-04, 6.89916916e-05, 4.50190528e-04, 1.05870731e-04,                                8.10693385e-04, 1.73942627e-04, 1.38023226e-03, 3.26222261e-04, 3.59855950e-03, 8.55547617e-04, 7.57037253e-03, 1.79546435e-03,                                1.91855462e-02, 4.95312499e-03, 4.17891050e-02, 1.12191931e-02, 7.20551542e-03, 1.47428821e-02, 2.73959699e-04, 6.42178329e-05,                                3.34185182e-04, 7.89906121e-05, 7.37487867e-04, 1.73281220e-04, 1.33658238e-03, 3.15987747e-04, 2.93381868e-03, 6.77261014e-04,                                5.59968213e-03, 1.34015778e-03, 1.03250687e-02, 2.68842322e-03, 1.20213175e-02, 6.29507982e-03, 6.12708065e-04, 2.58789939e-03,                                2.52303559e-04, 5.24861383e-05, 3.24287978e-04, 7.66420004e-05, 6.02828034e-04, 1.42049206e-04, 1.00048533e-03, 2.33293428e-04,                                1.69919746e-03, 2.86197208e-04, 3.16049262e-03, 8.25644281e-04, 4.42127784e-03, 1.11397610e-03, 3.18055447e-03, 1.89900231e-03,                                5.21854271e-05, 1.49620270e-05, 2.19673443e-04, 5.05056580e-05, 2.78911395e-04, 6.62308025e-05, 4.46417375e-04, 1.06092547e-04,                                6.96215542e-04, 1.74006145e-04, 1.07273118e-03, 2.68697647e-04, 1.22403043e-03, 6.32901222e-04, 4.68587398e-04, 1.57254409e-03,                                6.12217659e-04, 6.27736414e-04, 5.21854260e-05, 1.49620268e-05, 1.63717683e-04, 3.88392041e-05, 2.08559863e-04, 5.21893009e-05,                                3.12850042e-04, 7.82303519e-05, 4.03163061e-04, 1.22152958e-04, 5.23866596e-04, 1.36204435e-04, 4.32152509e-04, 3.93547959e-04,                                1.36280312e-04, 4.00773349e-04, 5.21854246e-05, 1.49620266e-05, 5.21854249e-05, 1.49620266e-05, 1.00882175e-04, 2.53363758e-05,                                1.19650971e-04, 3.57080593e-05, 1.62965035e-04, 4.23767861e-05, 1.59945424e-04, 1.35824615e-04, 1.15069781e-04, 2.33897791e-04,                                9.22431827e-05, 2.03367158e-04, 5.21854240e-05, 1.49620265e-05, 5.21854242e-05, 1.49620265e-05, 5.21854243e-05, 1.49620265e-05,                                1.02986075e-05, 3.47290803e-05, 3.18792055e-05, 3.14989428e-05, 3.27212234e-05, 6.87411204e-05, 3.89836863e-05, 8.11000013e-05,                                5.21854234e-05, 1.49620264e-05, 5.21854235e-05, 1.49620264e-05, 5.21854238e-05, 1.49620264e-05, 5.21854239e-05, 1.49620265e-05,                                5.21854240e-05, 1.49620265e-05, 3.22317215e-06, 2.57056451e-06, 1.63964002e-05, 6.03916028e-05, 1.39361599e-04, 1.95958113e-04,                                6.09076961e-06, 2.57809548e-05, 3.83041833e-04, 2.22389949e-04, 6.43396148e-05, 2.67453426e-04, 1.23309410e-03, 1.51568355e-03,                                5.08587341e-04, 1.92666166e-03, 2.15287607e-04, 8.21686375e-04, 4.08169364e-05, 5.82419568e-05, 1.83869753e-06, 7.91322227e-06,                                1.28715734e-04, 1.84574158e-04, 1.98014762e-05, 8.24441204e-05, 4.18789536e-04, 5.01529092e-04, 2.35793404e-04, 8.87187788e-04,                                4.95518758e-04, 1.82591600e-03, 3.29197667e-03, 4.70813968e-03, 3.29525657e-05, 1.50507485e-04, 4.38565972e-05, 6.46320816e-05,                                5.42328133e-06, 2.25155798e-05, 1.07814823e-04, 6.64200452e-05, 5.88067330e-05, 2.20636335e-04, 1.39374982e-04, 5.12891795e-04,                                1.22328346e-03, 1.68755290e-03, 7.34600081e-05, 3.16756933e-04, 5.95344673e-03, 8.49533527e-03, 1.22231330e-04, 6.25355622e-04,                                3.69244929e-05, 4.45537844e-05, 1.42728178e-05, 5.35735240e-05, 2.84823551e-05, 1.04413932e-04, 2.17057145e-04, 3.01708601e-04,                                1.12729111e-05, 4.84166915e-05, 8.30130753e-04, 1.20848164e-03, 1.22616719e-04, 5.12993773e-04, 2.06987202e-03, 2.85575965e-03,                                4.86759169e-05, 2.72432054e-04, 9.62644337e-06, 7.30140163e-06, 5.28315737e-05, 7.28663250e-05, 2.30977208e-06, 9.92889631e-06,                                1.48655680e-04, 2.13815909e-04, 2.04257115e-05, 1.57200705e-05, 4.23978310e-04, 5.31430459e-04, 1.79993658e-04, 6.73166979e-04,                                1.61424234e-04, 6.14783397e-04, 5.21854259e-05, 1.49620268e-05, 8.16935996e-07, 3.46858005e-06, 4.12028849e-05, 5.94961454e-05,                                5.33835254e-06, 2.22392624e-05, 9.29903206e-05, 1.15209337e-04, 4.42700347e-05, 1.64760745e-04, 4.70509407e-05, 1.87470867e-04,                                1.05794699e-04, 4.25239341e-04, 3.38765546e-06, 1.59879536e-05, 5.21854254e-05, 1.49620267e-05, 1.90974105e-06, 7.90965962e-06,                                2.77936845e-05, 3.43869611e-05, 1.29357502e-05, 4.83324842e-05, 1.55698831e-05, 5.83170110e-05, 8.58218674e-05, 1.24853869e-04,                                2.20731868e-06, 1.01818043e-05, 3.77609958e-05, 1.30838058e-04, 5.21854244e-05, 1.49620265e-05, 5.21854247e-05, 1.49620266e-05,                                4.09772507e-06, 1.53750259e-05, 4.62641128e-06, 1.73056424e-05, 2.64931241e-05, 3.82991263e-05, 8.30197772e-07, 3.82058236e-06,                                2.94724962e-05, 8.52308228e-05, 3.03265922e-06, 1.42154534e-05, 5.21854239e-05, 1.49620264e-05, 5.21854241e-05, 1.49620265e-05,                                5.21854242e-05, 1.49620265e-05, 2.32514415e-06, 9.22518992e-06, 1.61161882e-07, 7.51919246e-07, 7.04747914e-06, 2.10518087e-05,                                1.41411312e-06, 6.46731155e-06, 5.21854234e-05, 1.49620264e-05, 5.21854235e-05, 1.49620264e-05, 5.21854237e-05, 1.49620264e-05,                                5.21854239e-05, 1.49620264e-05, 5.21854240e-05, 1.49620264e-05, 3.79111626e-06, 5.37277583e-06, 2.18107192e-06, 1.14036411e-05,                                4.59085311e-05, 8.41907672e-05, 8.86224084e-06, 3.45704316e-05, 5.78400243e-05, 4.68416104e-05, 4.79477959e-05, 1.58360042e-04,                                2.59381233e-05, 1.23895592e-04, 3.01256486e-04, 8.99954672e-04, 2.06246702e-05, 1.18391309e-04, 1.41048247e-05, 2.65351810e-05,                                2.86121782e-06, 1.38525203e-05, 2.08607988e-05, 7.70025773e-05, 1.33893912e-05, 5.15350803e-05, 9.34569613e-06, 4.43368365e-05,                                1.20516746e-04, 3.81300874e-04, 5.62800586e-05, 3.02732050e-04, 1.01736084e-03, 1.95788620e-03, 7.78386394e-05, 3.16228419e-04,                                7.36047808e-06, 2.79682668e-05, 3.80089316e-06, 1.39554053e-05, 2.42066886e-06, 2.08330592e-06, 2.75071437e-05, 9.11602280e-05,                                1.73775873e-05, 9.15988101e-05, 3.64489627e-04, 6.78827203e-04, 9.64041603e-05, 4.74881146e-04, 8.60293004e-04, 3.12188297e-03,                                1.45318487e-04, 5.42094838e-04, 8.01373365e-07, 3.84893359e-06, 6.67300941e-06, 2.21091161e-05, 3.36769315e-06, 1.77708760e-05,                                6.54248018e-05, 1.23617603e-04, 1.64582786e-05, 8.06500737e-05, 1.37546857e-04, 5.12096424e-04, 7.44269455e-05, 3.09026607e-04,                                4.58181193e-05, 2.26207662e-04, 4.18298692e-05, 1.38166040e-04, 9.44591337e-07, 8.38897125e-07, 1.59380827e-05, 2.94889701e-05,                                3.34522708e-06, 1.63288275e-05, 2.47140339e-05, 9.07323274e-05, 1.37309540e-05, 2.88217066e-05, 9.52685535e-06, 4.66274210e-05,                                6.38892249e-05, 2.45600600e-04, 1.35753509e-05, 7.51187922e-05, 5.21854257e-05, 1.49620268e-05, 7.03907291e-07, 3.63028988e-06,                                6.68413787e-06, 2.47812008e-05, 3.51791143e-06, 1.41448770e-05, 2.08224441e-06, 1.01505246e-05, 1.73243308e-05, 5.76340168e-05,                                4.17740125e-06, 2.51844015e-05, 4.01300684e-05, 1.56437511e-04, 1.52609666e-05, 4.84195994e-05, 5.21854252e-05, 1.49620267e-05,                                9.72369463e-07, 4.04689637e-06, 6.14977717e-07, 2.99431427e-06, 5.09443711e-06, 1.78133875e-05, 1.68972689e-06, 9.23956660e-06,                                2.68895419e-05, 5.27981454e-05, 4.93032542e-06, 2.07367422e-05, 1.84288882e-05, 6.38630751e-05, 5.21854244e-05, 1.49620265e-05,                                5.21854246e-05, 1.49620266e-05, 1.55025460e-06, 5.92985206e-06, 4.95656511e-07, 2.71060280e-06, 8.13633309e-06, 1.59550772e-05,                                2.30604172e-06, 9.68678894e-06, 1.28003127e-05, 4.35113685e-05, 2.30876986e-05, 2.00920290e-05, 5.21854239e-05, 1.49620264e-05,                                5.21854241e-05, 1.49620265e-05, 5.21854242e-05, 1.49620265e-05, 8.89592661e-07, 3.31748798e-06, 2.38824072e-07, 1.27294273e-06,                                2.11704516e-06, 8.18421134e-06, 1.17476968e-05, 8.75716749e-06, 5.21854234e-05, 1.49620264e-05, 5.21854235e-05, 1.49620264e-05,
                                5.21854237e-05, 1.49620264e-05, 5.21854239e-05, 1.49620264e-05, 5.21854240e-05, 1.49620264e-05])

    ref_eigenvalue = 1.1151426949100507
    s = solver.SolverSlepc(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
    s.solve()
    # np.set_printoptions(threshold=100000, edgeitems=10, linewidth=140)
    # print(s.getEigenValues())
    # print(repr(s.getEigenVectors()[0]))
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)
    npt.assert_almost_equal(s.getEigenVectors()[0], ref_eigenvector,
                            decimal=4)

    s.solve(solver="arnoldi")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)

    s.solve(inner_solver="ibcgs")
    assert ref_eigenvalue == pytest.approx(s.getEigenValues()[0], abs=1e-6)


# def test_solverPI_3d_refine_lu(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverPowerIt(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(inner_solver="SparseLU")

# def test_solverPI_3d_refine_BiCGSTAB(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverPowerIt(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(inner_solver="BiCGSTAB")

# def test_solverPI_3d_refine_BiCGSTAB_lu(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverPowerIt(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(inner_solver="BiCGSTAB", inner_precond="IncompleteLUT")

# def test_solverPI_3d_refine_GMRES(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverPowerIt(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(inner_solver="GMRES")

# # @pytest.mark.integtest    
# def test_solverSlepc_3d_refine(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverSlepc(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(outer_max_iter=10000, inner_max_iter=200, tol=1e-6)

# # @pytest.mark.integtest
# def test_solverSlepc_3d_refine_arnoldi(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverSlepc(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(solver="arnoldi", outer_max_iter=10000, inner_max_iter=200, tol=1e-6)

# # @pytest.mark.integtest    
# def test_solverSlepc_3d_refine_ibcgs(macrolib_3d_refine):
#     solver.init_slepc()
#     set_log_level(log_level.debug)
#     macrolib, x_mesh, y_mesh, z_mesh = macrolib_3d_refine
#     s = solver.SolverSlepc(x_mesh, y_mesh, z_mesh, macrolib, 1., 0., 1., 0., 0., 0.)
#     s.solve(inner_solver="ibcgs", outer_max_iter=10000, inner_max_iter=200, tol=1e-6)